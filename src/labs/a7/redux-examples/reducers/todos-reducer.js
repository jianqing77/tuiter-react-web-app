import { createSlice } from '@reduxjs/toolkit';

// Define an initial state for the slice.
const initialTodos = [
    {
        _id: '123',
        do: "Accelerate the world's transition to sustainable energy",
        done: false,
    },
    {
        _id: '234',
        do: 'Reduce space transportation costs to become a spacefaring civilization',
        done: false,
    },
];

// The createSlice function generates a REDUCER function based on the specified name and initial state,
// Create a slice of the Redux store with `createSlice`.
const todosSlice = createSlice({
    name: 'todos', // The name of the slice.
    initialState: initialTodos, // The initial state of the slice.
    reducers: {
        // Define addTodo reducer that will add a new todo
        addTodo(state, action) {
            state.push({
                _id: new Date().getTime(), // generate unique id using timestamp
                do: action.payload.do, // set todo text from payload
                done: false, // set done status to false by default
            });
        },
        // new deleteTodo function
        deleteTodo(state, action) {
            const index = action.payload; // extracts index from action's payload
            state.splice(index, 1); // uses it to splice out the todo to be deleted
        },
        todoDoneToggle(state, action) {
            const todo = state.find((todo) => todo._id === action.payload._id);
            todo.done = !todo.done;
        },
    },
});

// Export the addTodo action creator from the slice
export const { addTodo, deleteTodo, todoDoneToggle } = todosSlice.actions;

// Export the reducer function generated by the slice, which can be used to update the state of the slice.
export default todosSlice.reducer;
